<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
	<configSections>
		<sectionGroup name="elmah">
			<section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" />
			<section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" />
			<section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" />
			<section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" />
		</sectionGroup>
	</configSections>
	<appSettings>
		<!--
		Determines if an Api Key is required to push\delete packages from the server. 
		-->
		<add key="requireApiKey" value="true" />
		<!-- 
		Set the value here to allow people to push/delete packages from the server.
		NOTE: This is a shared key (password) for all users.
		-->
		<add key="apiKey" value="" />
		<!--
		Change the path to the packages folder. Default is ~/Packages.
		This can be a virtual or physical path.
		-->
		<add key="packagesPath" value="~/Packages" />
		<!--
		Set allowOverrideExistingPackageOnPush to false to mimic NuGet.org's behaviour (do not allow overwriting packages with same id + version).
		-->
		<add key="allowOverrideExistingPackageOnPush" value="true" />
		<!--
		Set ignoreSymbolsPackages to true to filter out symbols packages. Since NuGet.Server does not come with a symbol server,
		it makes sense to ignore this type of packages. When enabled, files named `.symbols.nupkg` or packages containing a `/src` folder will be ignored.

		If you only push .symbols.nupkg packages, set this to false so that packages can be uploaded.
		-->
		<add key="ignoreSymbolsPackages" value="false" />
		<!--
		Set enableDelisting to true to enable delist instead of delete as a result of a "nuget delete" command.
		- delete: package is deleted from the repository's local filesystem.
		- delist: 
		  - "nuget delete": the "hidden" file attribute of the corresponding nupkg on the repository local filesystem is turned on instead of deleting the file.
		  - "nuget list" skips delisted packages, i.e. those that have the hidden attribute set on their nupkg.
		  - "nuget install packageid -version version" command will succeed for both listed and delisted packages.
			e.g. delisted packages can still be downloaded by clients that explicitly specify their version.
		-->
		<add key="enableDelisting" value="false" />
		<!--
		Set enableFrameworkFiltering to true to enable filtering packages by their supported frameworks during search.
		-->
		<add key="enableFrameworkFiltering" value="false" />
		<!--
		When running NuGet.Server in a NAT network, ASP.NET may embed the server's internal IP address in the V2 feed.
		Uncomment the following configuration entry to enable NAT support.
		-->
		<!-- <add key="aspnet:UseHostHeaderForRequestUrl" value="true" /> -->
		<add key="symbolPackagesPath" value="~/SymbolPackages" />
		<add key="symbolsPath" value="~/Symbols" />
	</appSettings>
	<!--
	For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

	The following attributes can be set on the <httpRuntime> tag.
		<system.Web>
		<httpRuntime targetFramework="4.6" />
		</system.Web>
	-->
	<system.web>
		<httpRuntime maxRequestLength="31457280" />
		<compilation debug="true" targetFramework="4.6" />
		<httpModules>
			<add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
			<add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" />
			<add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" />
		</httpModules>
	</system.web>
	<system.serviceModel>
		<serviceHostingEnvironment aspNetCompatibilityEnabled="true" />
	</system.serviceModel>
	<system.webServer>
		<staticContent>
			<mimeMap fileExtension=".nupkg" mimeType="application/zip" />
		</staticContent>
		<modules runAllManagedModulesForAllRequests="true">
			<remove name="WebDAVModule" />
			<add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler" />
			<add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" preCondition="managedHandler" />
			<add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" preCondition="managedHandler" />
		</modules>
		<handlers>
			<remove name="WebDAV" />
			<remove name="ExtensionlessUrlHandler-Integrated-4.0" />
			<add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,PUT,DEBUG" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
		</handlers>
		<security>
			<requestFiltering>
				<requestLimits maxAllowedContentLength="31457280" />
			</requestFiltering>
		</security>
		<validation validateIntegratedModeConfiguration="false" />
	</system.webServer>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="NuGet.Core" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-2.14.0.832" newVersion="2.14.0.832" />
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
	<elmah>
		<!--
			See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for 
			more information on remote access and securing ELMAH.
		-->
		<security allowRemoteAccess="false" />
	</elmah>
	<location path="elmah.axd" inheritInChildApplications="false">
		<system.web>
			<httpHandlers>
				<add verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" />
			</httpHandlers>
			<!-- 
			See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for 
			more information on using ASP.NET authorization securing ELMAH.

			<authorization>
				<allow roles="admin" />
				<deny users="*" />  
			</authorization>
		  -->
		</system.web>
		<system.webServer>
			<handlers>
				<add name="ELMAH" verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" preCondition="integratedMode" />
			</handlers>
		</system.webServer>
	</location>
	<location path="source">
		<system.web>
			<httpRuntime relaxedUrlToFileSystemMapping="true" />
		</system.web>
		<!-- Required for IIS 7.0 -->
		<system.webServer>
			<handlers>
				<add name="UrlRoutingHandler" path="*" verb="GET" type="System.Web.Routing.UrlRoutingHandler, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
			</handlers>
			<security>
				<requestFiltering>
					<fileExtensions applyToWebDAV="false">
						<remove fileExtension=".cs" />
						<add fileExtension=".cs" allowed="true" />
						<remove fileExtension=".vb" />
						<add fileExtension=".vb" allowed="true" />
					</fileExtensions>
				</requestFiltering>
			</security>
		</system.webServer>
	</location>
</configuration>